# YOLO Inference Configuration for Vertebrae Fracture Detection

# Model configuration
model:
  weights_path: "../models/best.pt"  # Path to trained model weights
  device: "cuda"                     # Device for inference (cuda/cpu)
  half_precision: false              # Use half precision for faster inference
  
# Inference parameters
inference:
  confidence_threshold: 0.25         # Confidence threshold for detections
  iou_threshold: 0.45               # IoU threshold for NMS
  max_detections: 100               # Maximum detections per image
  agnostic_nms: false               # Class-agnostic NMS
  
# Input processing
input:
  image_size: 640                   # Input image size
  normalize: true                   # Apply normalization
  mean: [0.485]                     # Normalization mean
  std: [0.229]                      # Normalization std
  
# Output processing
output:
  save_results: true                # Save inference results
  save_confidence: true             # Save confidence scores
  save_crops: false                 # Save cropped detections
  save_txt: true                    # Save results in YOLO format
  save_json: true                   # Save results in JSON format
  
# Visualization
visualization:
  show_labels: true                 # Show class labels
  show_confidence: true             # Show confidence scores
  show_boxes: true                  # Show bounding boxes
  line_thickness: 2                 # Box line thickness
  font_size: 12                     # Font size for labels
  colors:
    normal: [0, 255, 0]             # Green for normal
    fracture: [255, 0, 0]           # Red for fracture
    
# Medical-specific settings
medical:
  window_center: 40                 # CT windowing center
  window_width: 400                 # CT windowing width
  slice_thickness: 1                # Slice thickness
  
# Batch processing
batch:
  enabled: true                     # Enable batch processing
  batch_size: 32                    # Batch size for inference
  
# Performance optimization
optimization:
  tensorrt: false                   # Use TensorRT optimization
  openvino: false                   # Use OpenVINO optimization
  coreml: false                     # Use CoreML optimization
  
# Post-processing
post_processing:
  filter_small_detections: true     # Filter small detections
  min_detection_area: 100           # Minimum detection area (pixels)
  merge_overlapping: true           # Merge overlapping detections
  overlap_threshold: 0.7            # Overlap threshold for merging
  
# Output directories
output_dirs:
  results: "../results/inference"   # Main results directory
  images: "images"                  # Processed images
  labels: "labels"                  # Detection labels
  crops: "crops"                    # Cropped detections
  
# Logging
logging:
  level: "INFO"                     # Logging level
  save_log: true                    # Save log to file
  log_file: "inference.log"         # Log file name